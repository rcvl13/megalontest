@page "/customerlist"
@using CustomerOrders.App.DTOs
@using CustomerOrders.App.Services
@inject CustomerApiService CustomerService
@inject NavigationManager Navigation

<PageTitle>Customers</PageTitle>

<h1>CUSTOMERS</h1>

@if (customers == null)
{
    <p><em>Loading customers...</em></p>
}
else if (!customers.Any())
{
    <p><em>No customers found.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Customer ID</th>
                <th>Customer Name</th>
                <th>Date of Birth</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.CustomerID</td>
                    <td>@customer.FullName</td>
                    <td>@customer.DOB.ToShortDateString()</td>
                    <td>
                        <button class="btn btn-info" @onclick="() => ViewOrders(customer.CustomerID)">View Orders</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CustomerDto>? customers;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            customers = await CustomerService.GetCustomersAsync();
            if (customers == null)
            {
                customers = new List<CustomerDto>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching customers: {ex.Message}");
            customers = new List<CustomerDto>();
        }
    }

    private void ViewOrders(Guid customerId)
    {
        Navigation.NavigateTo($"/orderdetails/{customerId}");
    }
}